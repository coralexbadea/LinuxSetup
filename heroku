##Create heroku python backend with postgress
pip install psycopg2
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://postgres:123456@localhost/lexus'

create requirements.txt

heroku login # If you have the Heroku CLI installed correctly, this will open a tab in the browser and log you in to Heroku.
heroku create unique-app-name # (replace `unique-app-name` with your own name). This creates an app on the Heroku server, and it's the place your code is cloned to so that it can be run. Check that it has appeared in your [Heroku dashboard](https://dashboard.heroku.com/).
heroku addons:create heroku-postgresql:hobby-dev -a unique-app-name # This creates an empty postgres database for your app. Heroku uses its own database, not your pgAdmin database.
heroku config -a unique-app-name # The url you set earlier as the `SQLALCHEMY_DATABASE_URI` points to the database you created in pgAdmin, but since your app is now going to be using Heroku's database you need a new url. Copy the DATABASE_URL that is returned. 


# Procfile
web: gunicorn app:app #

# runtime.txt
python-3.8.5 


git init - daca nu e git deja 
heroku git:remote -a yourapp

git add .
git commit -m "asdf"
git push heroku master


heroku run python3
>>> from app import db
>>> db.create_all()

To check out your database, enter
heroku pg:psql --app unique-app-name




##Heroku angular 

https://itnext.io/how-to-deploy-angular-application-to-heroku-1d56e09c5147

check node version to be latest stable


##Heroku postgresql
heroku pg:psql --app ds2021-cornel-badea
